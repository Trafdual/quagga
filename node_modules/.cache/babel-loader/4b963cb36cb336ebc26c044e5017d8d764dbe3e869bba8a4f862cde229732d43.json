{"ast":null,"code":"var _jsxFileName = \"D:\\\\neworking\\\\quagga2-react-example\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Quagga from '@ericblade/quagga2';\nimport Scanner from './Scanner';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [scanning, setScanning] = useState(false); // toggleable state for \"should render scanner\"\n  const [cameras, setCameras] = useState([]); // array of available cameras, as returned by Quagga.CameraAccess.enumerateVideoDevices()\n  const [cameraId, setCameraId] = useState(null); // id of the active camera device\n  const [cameraError, setCameraError] = useState(null); // error message from failing to access the camera\n  const [results, setResults] = useState([]); // list of scanned results\n  const [torchOn, setTorch] = useState(false); // toggleable state for \"should torch be on\"\n  const scannerRef = useRef(null); // reference to the scanner element in the DOM\n\n  // at start, we need to get a list of the available cameras.  We can do that with Quagga.CameraAccess.enumerateVideoDevices.\n  // HOWEVER, Android will not allow enumeration to occur unless the user has granted camera permissions to the app/page.\n  // AS WELL, Android will not ask for permission until you actually try to USE the camera, just enumerating the devices is not enough to trigger the permission prompt.\n  // THEREFORE, if we're going to be running in Android, we need to first call Quagga.CameraAccess.request() to trigger the permission prompt.\n  // AND THEN, we need to call Quagga.CameraAccess.release() to release the camera so that it can be used by the scanner.\n  // AND FINALLY, we can call Quagga.CameraAccess.enumerateVideoDevices() to get the list of cameras.\n\n  // Normally, I would place this in an application level \"initialization\" event, but for this demo, I'm just going to put it in a useEffect() hook in the App component.\n\n  useEffect(() => {\n    const enableCamera = async () => {\n      await Quagga.CameraAccess.request(null, {});\n    };\n    const disableCamera = async () => {\n      await Quagga.CameraAccess.release();\n    };\n    const enumerateCameras = async () => {\n      const cameras = await Quagga.CameraAccess.enumerateVideoDevices();\n      console.log('Cameras Detected: ', cameras);\n      return cameras;\n    };\n    enableCamera().then(disableCamera).then(enumerateCameras).then(cameras => setCameras(cameras)).then(() => Quagga.CameraAccess.disableTorch()) // disable torch at start, in case it was enabled before and we hot-reloaded\n    .catch(err => setCameraError(err));\n    return () => disableCamera();\n  }, []);\n\n  // provide a function to toggle the torch/flashlight\n  const onTorchClick = useCallback(() => {\n    const torch = !torchOn;\n    setTorch(torch);\n    if (torch) {\n      Quagga.CameraAccess.enableTorch();\n    } else {\n      Quagga.CameraAccess.disableTorch();\n    }\n  }, [torchOn, setTorch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [cameraError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ERROR INITIALIZING CAMERA $\", JSON.stringify(cameraError), \" -- DO YOU HAVE PERMISSION?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 28\n    }, this) : null, cameras.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enumerating Cameras, browser may be prompting for permissions beforehand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => setCameraId(event.target.value),\n        children: cameras.map(camera => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: camera.deviceId,\n          children: camera.label || camera.deviceId\n        }, camera.deviceId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onTorchClick,\n      children: torchOn ? 'Disable Torch' : 'Enable Torch'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setScanning(!scanning),\n      children: scanning ? 'Stop' : 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"results\",\n      children: results.map(result => result.codeResult && /*#__PURE__*/_jsxDEV(Result, {\n        result: result\n      }, result.codeResult.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 64\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: scannerRef,\n      style: {\n        position: 'relative',\n        border: '3px solid red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        className: \"drawingBuffer\",\n        style: {\n          position: 'absolute',\n          top: '0px',\n          // left: '0px',\n          // height: '100%',\n          // width: '100%',\n          border: '3px solid green'\n        },\n        width: \"640\",\n        height: \"480\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), scanning ? /*#__PURE__*/_jsxDEV(Scanner, {\n        scannerRef: scannerRef,\n        cameraId: cameraId,\n        onDetected: result => setResults([...results, result])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"KA502jOa5cXeksmDzJ70Gp5ByV4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Quagga","Scanner","Result","jsxDEV","_jsxDEV","App","_s","scanning","setScanning","cameras","setCameras","cameraId","setCameraId","cameraError","setCameraError","results","setResults","torchOn","setTorch","scannerRef","enableCamera","CameraAccess","request","disableCamera","release","enumerateCameras","enumerateVideoDevices","console","log","then","disableTorch","catch","err","onTorchClick","torch","enableTorch","children","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","length","onChange","event","target","value","map","camera","deviceId","label","onClick","className","result","codeResult","code","ref","style","position","border","top","width","height","onDetected","_c","$RefreshReg$"],"sources":["D:/neworking/quagga2-react-example/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport Quagga from '@ericblade/quagga2';\r\nimport Scanner from './Scanner';\r\nimport Result from './Result';\r\n\r\nconst App = () => {\r\n    const [scanning, setScanning] = useState(false); // toggleable state for \"should render scanner\"\r\n    const [cameras, setCameras] = useState([]); // array of available cameras, as returned by Quagga.CameraAccess.enumerateVideoDevices()\r\n    const [cameraId, setCameraId] = useState(null); // id of the active camera device\r\n    const [cameraError, setCameraError] = useState(null); // error message from failing to access the camera\r\n    const [results, setResults] = useState([]); // list of scanned results\r\n    const [torchOn, setTorch] = useState(false); // toggleable state for \"should torch be on\"\r\n    const scannerRef = useRef(null); // reference to the scanner element in the DOM\r\n\r\n    // at start, we need to get a list of the available cameras.  We can do that with Quagga.CameraAccess.enumerateVideoDevices.\r\n    // HOWEVER, Android will not allow enumeration to occur unless the user has granted camera permissions to the app/page.\r\n    // AS WELL, Android will not ask for permission until you actually try to USE the camera, just enumerating the devices is not enough to trigger the permission prompt.\r\n    // THEREFORE, if we're going to be running in Android, we need to first call Quagga.CameraAccess.request() to trigger the permission prompt.\r\n    // AND THEN, we need to call Quagga.CameraAccess.release() to release the camera so that it can be used by the scanner.\r\n    // AND FINALLY, we can call Quagga.CameraAccess.enumerateVideoDevices() to get the list of cameras.\r\n\r\n    // Normally, I would place this in an application level \"initialization\" event, but for this demo, I'm just going to put it in a useEffect() hook in the App component.\r\n\r\n    useEffect(() => {\r\n        const enableCamera = async () => {\r\n            await Quagga.CameraAccess.request(null, {});\r\n        };\r\n        const disableCamera = async () => {\r\n            await Quagga.CameraAccess.release();\r\n        };\r\n        const enumerateCameras = async () => {\r\n            const cameras = await Quagga.CameraAccess.enumerateVideoDevices();\r\n            console.log('Cameras Detected: ', cameras);\r\n            return cameras;\r\n        };\r\n        enableCamera()\r\n        .then(disableCamera)\r\n        .then(enumerateCameras)\r\n        .then((cameras) => setCameras(cameras))\r\n        .then(() => Quagga.CameraAccess.disableTorch()) // disable torch at start, in case it was enabled before and we hot-reloaded\r\n        .catch((err) => setCameraError(err));\r\n        return () => disableCamera();\r\n    }, []);\r\n\r\n    // provide a function to toggle the torch/flashlight\r\n    const onTorchClick = useCallback(() => {\r\n        const torch = !torchOn;\r\n        setTorch(torch);\r\n        if (torch) {\r\n            Quagga.CameraAccess.enableTorch();\r\n        } else {\r\n            Quagga.CameraAccess.disableTorch();\r\n        }\r\n    }, [torchOn, setTorch]);\r\n\r\n    return (\r\n        <div>\r\n            {cameraError ? <p>ERROR INITIALIZING CAMERA ${JSON.stringify(cameraError)} -- DO YOU HAVE PERMISSION?</p> : null}\r\n            {cameras.length === 0 ? <p>Enumerating Cameras, browser may be prompting for permissions beforehand</p> :\r\n                <form>\r\n                    <select onChange={(event) => setCameraId(event.target.value)}>\r\n                        {cameras.map((camera) => (\r\n                            <option key={camera.deviceId} value={camera.deviceId}>\r\n                                {camera.label || camera.deviceId}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </form>\r\n            }\r\n            <button onClick={onTorchClick}>{torchOn ? 'Disable Torch' : 'Enable Torch'}</button>\r\n            <button onClick={() => setScanning(!scanning) }>{scanning ? 'Stop' : 'Start'}</button>\r\n            <ul className=\"results\">\r\n                {results.map((result) => (result.codeResult && <Result key={result.codeResult.code} result={result} />))}\r\n            </ul>\r\n            <div ref={scannerRef} style={{position: 'relative', border: '3px solid red'}}>\r\n                {/* <video style={{ width: window.innerWidth, height: 480, border: '3px solid orange' }}/> */}\r\n                <canvas className=\"drawingBuffer\" style={{\r\n                    position: 'absolute',\r\n                    top: '0px',\r\n                    // left: '0px',\r\n                    // height: '100%',\r\n                    // width: '100%',\r\n                    border: '3px solid green',\r\n                }} width=\"640\" height=\"480\" />\r\n                {scanning ? <Scanner scannerRef={scannerRef} cameraId={cameraId} onDetected={(result) => setResults([...results, result])} /> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}